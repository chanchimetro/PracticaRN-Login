{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { userContext } from \"./contexts/userContext\";\nimport { dbContext } from \"./contexts/dbContext.js\";\nimport { getFirestore } from 'firebase/firestore';\nimport HomeScreen from \"./screens/Home.js\";\nimport ProfileScreen from \"./screens/Profile.js\";\nimport MenuScreen from \"./screens/Menu.js\";\nimport LoginScreen from \"./screens/Login.js\";\nimport RegisterScreen from \"./screens/Register.js\";\nimport FeedScreen from \"./screens/Feed.js\";\nimport { app } from \"./firebaseConfig.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar database = getFirestore(app);\nexport default function App() {\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  return _jsx(userContext.Provider, {\n    value: {\n      user: user,\n      setUser: setUser\n    },\n    children: _jsx(dbContext.Provider, {\n      value: database,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Menu\",\n            component: MenuScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Profile\",\n            component: ProfileScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Register\",\n            component: RegisterScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Feed\",\n            component: FeedScreen\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["useState","NavigationContainer","createNativeStackNavigator","userContext","dbContext","getFirestore","HomeScreen","ProfileScreen","MenuScreen","LoginScreen","RegisterScreen","FeedScreen","app","jsx","_jsx","jsxs","_jsxs","Stack","database","App","_useState","_useState2","_slicedToArray","user","setUser","Provider","value","children","Navigator","Screen","name","component"],"sources":["C:/Users/Martin/Desktop/PracticaRN-Login/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { userContext } from './contexts/userContext';\r\nimport { dbContext } from './contexts/dbContext.js';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport HomeScreen from './screens/Home.js';\r\nimport ProfileScreen from './screens/Profile.js';\r\nimport MenuScreen from './screens/Menu.js';\r\nimport LoginScreen from './screens/Login.js';\r\nimport RegisterScreen from './screens/Register.js';\r\nimport FeedScreen from './screens/Feed.js';\r\nimport { app } from './firebaseConfig.js';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst database = getFirestore(app);\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState({})\r\n  return (\r\n    <userContext.Provider value={{ user, setUser }}>\r\n      <dbContext.Provider value={database}>\r\n        <NavigationContainer>\r\n          <Stack.Navigator>\r\n            <Stack.Screen name=\"Menu\" component={MenuScreen} />\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n            <Stack.Screen name=\"Feed\" component={FeedScreen} />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </dbContext.Provider>\r\n    </userContext.Provider>\r\n  );\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,WAAW;AACpB,SAASC,SAAS;AAClB,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,UAAU;AACjB,SAASC,GAAG;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,KAAK,GAAGf,0BAA0B,CAAC,CAAC;AAE1C,IAAMgB,QAAQ,GAAGb,YAAY,CAACO,GAAG,CAAC;AAElC,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwBpB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,OACEP,IAAA,CAACX,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEH,IAAI,EAAJA,IAAI;MAAEC,OAAO,EAAPA;IAAQ,CAAE;IAAAG,QAAA,EAC7Cb,IAAA,CAACV,SAAS,CAACqB,QAAQ;MAACC,KAAK,EAAER,QAAS;MAAAS,QAAA,EAClCb,IAAA,CAACb,mBAAmB;QAAA0B,QAAA,EAClBX,KAAA,CAACC,KAAK,CAACW,SAAS;UAAAD,QAAA,GACdb,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEvB;UAAW,CAAE,CAAC,EACnDM,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,OAAO;YAACC,SAAS,EAAEtB;UAAY,CAAE,CAAC,EACrDK,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,SAAS;YAACC,SAAS,EAAExB;UAAc,CAAE,CAAC,EACzDO,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAErB;UAAe,CAAE,CAAC,EAC3DI,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEzB;UAAW,CAAE,CAAC,EACnDQ,IAAA,CAACG,KAAK,CAACY,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAEpB;UAAW,CAAE,CAAC;QAAA,CACpC;MAAC,CACC;IAAC,CACJ;EAAC,CACD,CAAC;AAE3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}