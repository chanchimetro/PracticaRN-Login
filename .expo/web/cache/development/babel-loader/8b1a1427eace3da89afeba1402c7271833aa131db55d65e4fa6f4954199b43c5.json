{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { userContext } from \"../contexts/userContext\";\nimport { dbContext } from \"../contexts/dbContext\";\nimport Separator from \"../Separator\";\nimport styles from \"../stylesheet.js\";\nimport { authServices } from \"../scripts.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar handleEditProfile = function handleEditProfile(msg, navigation) {\n  alert(msg.text1);\n  if (msg.type == \"success\") setTimeout(function () {\n    return navigation.navigate('Home');\n  }, 1000);\n};\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    surname = _useState8[0],\n    setSurname = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    email = _useState10[0],\n    setEmail = _useState10[1];\n  var user = useContext(userContext);\n  var db = useContext(dbContext);\n  useEffect(function () {\n    var func = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var r = yield authServices.fetchData(db, user.user.uid);\n        if (r.length > 0) {\n          yield setUsername(r[0].username);\n          yield setName(r[0].name);\n          yield setSurname(r[0].surname);\n          yield setEmail(r[0].email);\n        }\n        ;\n        setIsLoading(false);\n      });\n      return function func() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    func();\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.centeredCont,\n      children: isLoading ? _jsx(Text, {\n        children: \"Loading...\"\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Editar perfil\"\n        }), _jsxs(Text, {\n          children: [_jsx(View, {\n            style: styles.bold,\n            children: \"E-Mail: \"\n          }), email]\n        }), _jsx(Separator, {}), _jsx(Text, {\n          style: styles.bold,\n          children: \"Nombre de Usuario: \"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Ingresa tu nombre de usuario\",\n          onChangeText: setUsername,\n          value: username\n        }), _jsx(Text, {\n          style: styles.bold,\n          children: \"Nombre: \"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Ingresa tu nombre\",\n          onChangeText: setName,\n          value: name\n        }), _jsx(Text, {\n          style: styles.bold,\n          children: \"Apellido: \"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Ingresa tu apellido\",\n          onChangeText: setSurname,\n          value: surname\n        }), _jsx(Separator, {}), _jsx(Button, {\n          style: styles.button,\n          title: \"Confirmar\",\n          onPress: _asyncToGenerator(function* () {\n            return handleEditProfile(yield authServices.editProfile(username, name, surname, email, user.user.uid), navigation);\n          })\n        })]\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","useContext","useState","useEffect","Text","View","SafeAreaView","TextInput","Button","userContext","dbContext","Separator","styles","authServices","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","handleEditProfile","msg","navigation","alert","text1","type","setTimeout","navigate","ProfileScreen","_ref","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","username","setUsername","_useState5","_useState6","name","setName","_useState7","_useState8","surname","setSurname","_useState9","_useState10","email","setEmail","user","db","func","_ref2","_asyncToGenerator","r","fetchData","uid","length","apply","arguments","style","container","children","centeredCont","title","bold","input","placeholder","onChangeText","value","button","onPress","editProfile"],"sources":["C:/Users/Martin/Desktop/PracticaRN-Login/screens/Profile.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useContext, useState, useEffect } from 'react';\r\nimport { Text, View, SafeAreaView, TextInput, Button } from 'react-native';\r\nimport { userContext } from '../contexts/userContext';\r\nimport { dbContext } from '../contexts/dbContext';\r\nimport Separator from '../Separator';\r\nimport styles from '../stylesheet.js';\r\nimport { authServices } from '../scripts.js';\r\n\r\nconst handleEditProfile = (msg, navigation) => {\r\n\t//El componente Alert de React Native no funciona en web. Por eso utilizo alert(), ya que funciona en todas las plataformas. :)\r\n\talert(msg.text1);\r\n\tif (msg.type == \"success\") setTimeout(() => navigation.navigate('Home'), 1000);\r\n}\r\n\r\nexport default function ProfileScreen({ navigation }) {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [surname, setSurname] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst user = useContext(userContext);\r\n\tconst db = useContext(dbContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst func = async () => {\r\n\t\t\tlet r = await authServices.fetchData(db, user.user.uid);\r\n\t\t\tif (r.length > 0) {\r\n\t\t\t\tawait setUsername(r[0].username);\r\n\t\t\t\tawait setName(r[0].name);\r\n\t\t\t\tawait setSurname(r[0].surname);\r\n\t\t\t\tawait setEmail(r[0].email);\r\n\t\t\t};\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t\tfunc();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.container}>\r\n\t\t\t<View\r\n\t\t\t\tstyle={styles.centeredCont}>\r\n\t\t\t\t\t{isLoading ? <Text>Loading...</Text> : <>\r\n\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\tstyle={styles.title}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tEditar perfil\r\n\t\t\t\t\t\t</Text>\r\n\t\t\t\t\t\t<Text><View style={styles.bold}>E-Mail: </View>{email}</Text>\r\n\t\t\t\t\t\t<Separator />\r\n\t\t\t\t\t\t<Text style={styles.bold}>Nombre de Usuario: </Text>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tplaceholder='Ingresa tu nombre de usuario'\r\n\t\t\t\t\t\t\tonChangeText={setUsername}\r\n\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text style={styles.bold}>Nombre: </Text>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tplaceholder='Ingresa tu nombre'\r\n\t\t\t\t\t\t\tonChangeText={setName}\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Text style={styles.bold}>Apellido: </Text>\r\n\t\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\t\t\tplaceholder='Ingresa tu apellido'\r\n\t\t\t\t\t\t\tonChangeText={setSurname}\r\n\t\t\t\t\t\t\tvalue={surname}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Separator />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\ttitle=\"Confirmar\"\r\n\t\t\t\t\t\t\tonPress={async () => handleEditProfile(await authServices.editProfile(username, name, surname, email, user.user.uid), navigation)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t</View>\r\n\t\t\t<StatusBar style=\"auto\" />\r\n\t\t</SafeAreaView>\r\n\t);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}