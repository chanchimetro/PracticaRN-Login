{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useContext, useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { userContext } from \"../contexts/userContext\";\nimport Separator from \"../Separator\";\nimport styles from \"../stylesheet.js\";\nimport { authServices } from \"../scripts.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar handleLogin = function handleLogin(msg, navigation) {\n  alert(msg.text1);\n  if (msg.type == \"success\") setTimeout(function () {\n    return navigation.navigate('Home');\n  }, 1000);\n};\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pass = _useState4[0],\n    setPass = _useState4[1];\n  var context = useContext(userContext);\n  useEffect(function () {\n    console.log(context.user);\n  }, [context.user]);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.centeredCont,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Login\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: setEmail,\n        value: email\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        onChangeText: setPass,\n        value: pass\n      }), _jsx(Button, {\n        style: styles.button,\n        title: \"Login\",\n        onPress: _asyncToGenerator(function* () {\n          return handleLogin(yield authServices.login(email, pass, context), navigation);\n        })\n      }), _jsx(Text, {\n        style: styles.link,\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: \"No tengo cuenta\"\n      }), _jsx(Separator, {}), _jsx(Text, {\n        children: \"ok\"\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["StatusBar","useContext","useEffect","useState","Text","View","SafeAreaView","TextInput","Button","userContext","Separator","styles","authServices","jsx","_jsx","jsxs","_jsxs","handleLogin","msg","navigation","alert","text1","type","setTimeout","navigate","LoginScreen","_ref","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","pass","setPass","context","console","log","user","style","container","children","centeredCont","title","input","placeholder","onChangeText","value","button","onPress","_asyncToGenerator","login","link"],"sources":["C:/Users/Martin/Desktop/PracticaRN-Login/screens/Login.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Text, View, SafeAreaView, TextInput, Button } from 'react-native';\r\nimport { userContext } from '../contexts/userContext';\r\nimport Separator from '../Separator';\r\nimport styles from '../stylesheet.js';\r\nimport { authServices } from '../scripts.js';\r\n\r\nconst handleLogin = (msg, navigation) => {\r\n\t//El componente Alert de React Native no funciona en web. Por eso utilizo alert(), ya que funciona en todas las plataformas. :)\r\n\talert(msg.text1);\r\n\tif (msg.type == \"success\") setTimeout(() => navigation.navigate('Home'), 1000);\r\n}\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [pass, setPass] = useState(\"\");\r\n\tconst context = useContext(userContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(context.user);\r\n\t}, [context.user])\r\n\t\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.container}>\r\n\t\t\t<View style={styles.centeredCont}>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tstyle={styles.title}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</Text>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tonChangeText={setEmail}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tonChangeText={setPass}\r\n\t\t\t\t\tvalue={pass}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\ttitle=\"Login\"\r\n\t\t\t\t\tonPress={async () => handleLogin(await authServices.login(email, pass, context), navigation)}\r\n\t\t\t\t/>\r\n\t\t\t\t<Text\r\n\t\t\t\t\tstyle={styles.link}\r\n\t\t\t\t\tonPress={() => navigation.navigate('Register')}\r\n\t\t\t\t>\r\n\t\t\t\t\tNo tengo cuenta\r\n\t\t\t\t</Text>\r\n\t\t\t\t<Separator />\r\n\t\t\t\t<Text>ok</Text>\r\n\t\t\t\t<StatusBar style=\"auto\" />\r\n\t\t\t</View>\r\n\t\t</SafeAreaView>\r\n\t);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}