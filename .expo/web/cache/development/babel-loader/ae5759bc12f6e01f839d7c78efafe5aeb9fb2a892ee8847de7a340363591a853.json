{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { userContext } from \"../contexts/userContext.js\";\nimport { dbContext } from \"../contexts/dbContext.js\";\nimport { thoughtServices } from \"../scripts.js\";\nimport Separator from \"../Separator\";\nimport styles from \"../stylesheet.js\";\nimport { useEffect, useState, useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function FeedScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    thoughts = _useState2[0],\n    setThoughts = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    post = _useState4[0],\n    setPost = _useState4[1];\n  var user = useContext(userContext);\n  var db = useContext(dbContext);\n  useEffect(function () {\n    console.log(user.user);\n    thoughtServices.fetchThoughts(db);\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.centeredCont,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"En que estas pensando?\",\n        onChangeText: setPost,\n        value: post\n      }), _jsx(Button, {\n        style: styles.button,\n        title: \"Post\",\n        onPress: _asyncToGenerator(function* () {\n          return handleEditProfile(yield thoughtServices.postThought(post));\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","View","SafeAreaView","Button","TextInput","userContext","dbContext","thoughtServices","Separator","styles","useEffect","useState","useContext","jsx","_jsx","jsxs","_jsxs","FeedScreen","_ref","navigation","_useState","_useState2","_slicedToArray","thoughts","setThoughts","_useState3","_useState4","post","setPost","user","db","console","log","fetchThoughts","style","container","children","centeredCont","input","placeholder","onChangeText","value","button","title","onPress","_asyncToGenerator","handleEditProfile","postThought"],"sources":["C:/Users/Martin/Desktop/PracticaRN-Login/screens/Feed.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { View, SafeAreaView, Button, TextInput } from 'react-native';\r\nimport { userContext } from '../contexts/userContext.js';\r\nimport { dbContext } from '../contexts/dbContext.js';\r\nimport { thoughtServices } from '../scripts.js';\r\nimport Separator from '../Separator';\r\nimport styles from '../stylesheet.js';\r\nimport { useEffect, useState, useContext } from 'react';\r\n\r\nexport default function FeedScreen({ navigation }) {\r\n\tconst [thoughts, setThoughts] = useState([]);\r\n\tconst [post, setPost] = useState([]);\r\n\tconst user = useContext(userContext);\r\n\tconst db = useContext(dbContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(user.user);\r\n\t\tthoughtServices.fetchThoughts(db);\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<SafeAreaView style={styles.container}>\r\n\t\t\t<View\r\n\t\t\t\tstyle={styles.centeredCont}>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='En que estas pensando?'\r\n\t\t\t\t\tonChangeText={setPost}\r\n\t\t\t\t\tvalue={post}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\ttitle=\"Post\"\r\n\t\t\t\t\tonPress={async () => handleEditProfile(await thoughtServices.postThought(post))}\r\n\t\t\t\t/>\r\n\t\t\t</View>\r\n\t\t\t<StatusBar style=\"auto\" />\r\n\t\t</SafeAreaView>\r\n\t);\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,SAAA;AAE5C,SAASC,WAAW;AACpB,SAASC,SAAS;AAClB,SAASC,eAAe;AACxB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,SAASC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAExD,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9C,IAAAC,SAAA,GAAgCT,QAAQ,CAAC,EAAE,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAwBd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAMG,IAAI,GAAGjB,UAAU,CAACP,WAAW,CAAC;EACpC,IAAMyB,EAAE,GAAGlB,UAAU,CAACN,SAAS,CAAC;EAEhCI,SAAS,CAAC,YAAM;IACfqB,OAAO,CAACC,GAAG,CAACH,IAAI,CAACA,IAAI,CAAC;IACtBtB,eAAe,CAAC0B,aAAa,CAACH,EAAE,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAEN,OACCd,KAAA,CAACd,YAAY;IAACgC,KAAK,EAAEzB,MAAM,CAAC0B,SAAU;IAAAC,QAAA,GACrCpB,KAAA,CAACf,IAAI;MACJiC,KAAK,EAAEzB,MAAM,CAAC4B,YAAa;MAAAD,QAAA,GAC3BtB,IAAA,CAACV,SAAS;QACT8B,KAAK,EAAEzB,MAAM,CAAC6B,KAAM;QACpBC,WAAW,EAAC,wBAAwB;QACpCC,YAAY,EAAEZ,OAAQ;QACtBa,KAAK,EAAEd;MAAK,CACZ,CAAC,EACFb,IAAA,CAACX,MAAM;QACN+B,KAAK,EAAEzB,MAAM,CAACiC,MAAO;QACrBC,KAAK,EAAC,MAAM;QACZC,OAAO,EAAAC,iBAAA,CAAE;UAAA,OAAYC,iBAAiB,OAAOvC,eAAe,CAACwC,WAAW,CAACpB,IAAI,CAAC,CAAC;QAAA;MAAC,CAChF,CAAC;IAAA,CACG,CAAC,EACPb,IAAA,CAACd,SAAS;MAACkC,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACb,CAAC;AAEjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}